/**
 * Cookie utility functions for authentication and user data management
 */

interface CookieOptions {
  days?: number; // ÿπÿØÿØ ÿßŸÑÿ£ŸäÿßŸÖ ŸÇÿ®ŸÑ ÿßŸÜÿ™Ÿáÿßÿ° ÿµŸÑÿßÿ≠Ÿäÿ© ÿßŸÑŸÉŸàŸÉŸäÿ≤
  path?: string;
  secure?: boolean; // ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ HTTPS ŸÅŸÇÿ∑
  sameSite?: 'strict' | 'lax' | 'none';
}

/**
 * ÿ≠ŸÅÿ∏ ŸÇŸäŸÖÿ© ŸÅŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param name ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param value ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑŸÖÿ±ÿßÿØ ÿ≠ŸÅÿ∏Ÿáÿß
 * @param options ÿÆŸäÿßÿ±ÿßÿ™ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 */
export const setCookie = (name: string, value: string, options: CookieOptions = {}): void => {
  const {
    days = 30, // ÿßŸÅÿ™ÿ±ÿßÿ∂ŸäÿßŸã 30 ŸäŸàŸÖ
    path = '/',
    secure = window.location.protocol === 'https:',
    sameSite = 'lax'
  } = options;

  let cookieString = `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;

  if (days) {
    const date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
    cookieString += `; expires=${date.toUTCString()}`;
  }

  cookieString += `; path=${path}`;
  
  if (secure) {
    cookieString += '; secure';
  }
  
  cookieString += `; SameSite=${sameSite}`;

  document.cookie = cookieString;
  console.log(`üç™ Cookie saved: ${name}`);
};

/**
 * ŸÇÿ±ÿßÿ°ÿ© ŸÇŸäŸÖÿ© ŸÖŸÜ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param name ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @returns ÿßŸÑŸÇŸäŸÖÿ© ÿ£Ÿà null ÿ•ÿ∞ÿß ŸÑŸÖ ÿ™Ÿàÿ¨ÿØ
 */
export const getCookie = (name: string): string | null => {
  const nameEQ = encodeURIComponent(name) + '=';
  const cookies = document.cookie.split(';');

  for (let i = 0; i < cookies.length; i++) {
    let cookie = cookies[i];
    while (cookie.charAt(0) === ' ') {
      cookie = cookie.substring(1, cookie.length);
    }
    if (cookie.indexOf(nameEQ) === 0) {
      const value = decodeURIComponent(cookie.substring(nameEQ.length, cookie.length));
      return value;
    }
  }

  return null;
};

/**
 * ÿ≠ÿ∞ŸÅ ŸÉŸàŸÉŸäÿ≤ ŸÖÿπŸäŸÜÿ©
 * @param name ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param path ÿßŸÑŸÖÿ≥ÿßÿ± (Ÿäÿ¨ÿ® ÿ£ŸÜ Ÿäÿ∑ÿßÿ®ŸÇ ÿßŸÑŸÖÿ≥ÿßÿ± ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿπŸÜÿØ ÿßŸÑÿ≠ŸÅÿ∏)
 */
export const deleteCookie = (name: string, path: string = '/'): void => {
  document.cookie = `${encodeURIComponent(name)}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;
  console.log(`üóëÔ∏è Cookie deleted: ${name}`);
};

/**
 * ÿ≠ÿ∞ŸÅ ÿ¨ŸÖŸäÿπ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 */
export const deleteAllCookies = (): void => {
  const cookies = document.cookie.split(';');
  
  for (let i = 0; i < cookies.length; i++) {
    const cookie = cookies[i];
    const eqPos = cookie.indexOf('=');
    const name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie.trim();
    deleteCookie(name);
  }
  
  console.log('üóëÔ∏è All cookies deleted');
};

/**
 * ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ Ÿàÿ¨ŸàÿØ ŸÉŸàŸÉŸäÿ≤ ŸÖÿπŸäŸÜÿ©
 * @param name ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @returns true ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ŸÖŸàÿ¨ŸàÿØÿ©
 */
export const hasCookie = (name: string): boolean => {
  return getCookie(name) !== null;
};

/**
 * ÿ≠ŸÅÿ∏ ŸÉÿßÿ¶ŸÜ JSON ŸÅŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param name ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param value ÿßŸÑŸÉÿßÿ¶ŸÜ ÿßŸÑŸÖÿ±ÿßÿØ ÿ≠ŸÅÿ∏Ÿá
 * @param options ÿÆŸäÿßÿ±ÿßÿ™ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 */
export const setCookieObject = (name: string, value: any, options: CookieOptions = {}): void => {
  const jsonString = JSON.stringify(value);
  setCookie(name, jsonString, options);
};

/**
 * ŸÇÿ±ÿßÿ°ÿ© ŸÉÿßÿ¶ŸÜ JSON ŸÖŸÜ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @param name ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàŸÉŸäÿ≤
 * @returns ÿßŸÑŸÉÿßÿ¶ŸÜ ÿ£Ÿà null ÿ•ÿ∞ÿß ŸÑŸÖ ŸäŸàÿ¨ÿØ
 */
export const getCookieObject = (name: string): any | null => {
  const value = getCookie(name);
  if (!value) return null;
  
  try {
    return JSON.parse(value);
  } catch (error) {
    console.error(`‚ùå Error parsing cookie ${name}:`, error);
    return null;
  }
};

